---
import Layout from '../../layouts/Layout.astro';
import { getCollection, getEntry } from 'astro:content';

const allProjects = await getCollection('projects')
const { project: slug } = Astro.params

const entry = slug ? await getEntry('projects', slug) : null
if (!entry && slug != null) 
  return Astro.redirect('/404')

const Content = await entry?.render().then(c => c.Content)
---

<Layout title="jay3332: Projects">
  <div class="flex">
    <div>
      <h1 class="px-4">My Work</h1>
      <div class:list={["flex gap-3 p-4"]}>
        {allProjects.map(project => (
          <a 
            href={`/projects/${project.slug}`}
            class:list={[
              "flex gap-x-2 rounded-xl p-4 group transition w-[48ch]",
              slug === project.slug ? "bg-gray-900" : "bg-transparent hover:",  
              entry ? "w-[48ch]" : "hover:bg-gradient-to-br hover:from-transparent hover:to-white/10 mobile:w-full"
            ]}
          >
            {project.data.thumbnail && <img src={project.data.thumbnail} alt="" class="w-20 h-20">}
            <div class="flex flex-col my-1">
              <div class="flex items-center justify-between">
                <h2 class="transition underline-offset-2">
                  <span class="flex items-center">
                    {project.data.name}
                    <img 
                      src="/icons/arrow-right.svg" 
                      alt="" 
                      class="invert w-4 h-4 opacity-30 group-hover:opacity-100 ml-1.5 group-hover:ml-2 transition-all"
                    >  
                  </span>
                </h2>
                <span class="text-xs font-bold uppercase opacity-60">{project.data.timeline}</span>
              </div>
              <p class="font-light text-sm text-white/80">{project.data.description}</p>  
              <div class="flex flex-wrap gap-1 mt-2">
                {project.data.skills.map(s => (
                  <span class="px-2 py-0.5 text-xs rounded-full bg-accent/40 text-accent-300 uppercase font-bold">{s}</span>
                ))}
              </div>
              <div class="flex mt-2">
                {(project.data.repo ?? project.data.org) && (
                  <p>link</p>
                )}
              </div>
            </div>
          </a>
        ))}
      </div>
    </div>
    {Content && <Content />}
  </div>
</Layout>